// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using drones_api.Data;

namespace drones_api.Migrations
{
    [DbContext(typeof(DronesApiContext))]
    [Migration("20211124095646_DroneForiegnRelationShip")]
    partial class DroneForiegnRelationShip
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("drones_api.Models.Drone", b =>
                {
                    b.Property<Guid>("DroneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BatterCapacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DroneModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DroneStateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("WeightLimit")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DroneId");

                    b.HasIndex("DroneModelId")
                        .IsUnique();

                    b.HasIndex("DroneStateId")
                        .IsUnique();

                    b.HasIndex("SerialNumber")
                        .IsUnique()
                        .HasFilter("[SerialNumber] IS NOT NULL");

                    b.ToTable("Drones");
                });

            modelBuilder.Entity("drones_api.Models.DroneModel", b =>
                {
                    b.Property<Guid>("DroneModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(90)")
                        .HasMaxLength(90);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("DroneModelId");

                    b.HasIndex("ModelName")
                        .IsUnique();

                    b.ToTable("DroneModels");

                    b.HasData(
                        new
                        {
                            DroneModelId = new Guid("68679bc6-04a1-4b83-a477-e13c77da04d7"),
                            CreatedAt = new DateTime(2021, 11, 24, 10, 56, 46, 267, DateTimeKind.Local).AddTicks(9105),
                            ModelName = "Lightweight",
                            Status = "Active",
                            UpdatedAt = new DateTime(2021, 11, 24, 10, 56, 46, 268, DateTimeKind.Local).AddTicks(6138)
                        },
                        new
                        {
                            DroneModelId = new Guid("b23f8368-a938-43f2-b803-0306e99927f5"),
                            CreatedAt = new DateTime(2021, 11, 24, 10, 56, 46, 268, DateTimeKind.Local).AddTicks(6617),
                            ModelName = "MiddleWeight",
                            Status = "Active",
                            UpdatedAt = new DateTime(2021, 11, 24, 10, 56, 46, 268, DateTimeKind.Local).AddTicks(6629)
                        },
                        new
                        {
                            DroneModelId = new Guid("a353826a-b57f-4675-990f-b76038652cd4"),
                            CreatedAt = new DateTime(2021, 11, 24, 10, 56, 46, 268, DateTimeKind.Local).AddTicks(6637),
                            ModelName = "Cruiserweight",
                            Status = "Active",
                            UpdatedAt = new DateTime(2021, 11, 24, 10, 56, 46, 268, DateTimeKind.Local).AddTicks(6638)
                        },
                        new
                        {
                            DroneModelId = new Guid("79fe7bc1-fafb-4e29-8712-d94b79859648"),
                            CreatedAt = new DateTime(2021, 11, 24, 10, 56, 46, 268, DateTimeKind.Local).AddTicks(6640),
                            ModelName = "Heavyweight",
                            Status = "Active",
                            UpdatedAt = new DateTime(2021, 11, 24, 10, 56, 46, 268, DateTimeKind.Local).AddTicks(6641)
                        });
                });

            modelBuilder.Entity("drones_api.Models.DroneState", b =>
                {
                    b.Property<Guid>("DroneStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("StateTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("DroneStateId");

                    b.HasIndex("StateTitle")
                        .IsUnique();

                    b.ToTable("DroneStates");

                    b.HasData(
                        new
                        {
                            DroneStateId = new Guid("90e682ba-1235-4085-8030-95a672d66660"),
                            CreatedAt = new DateTime(2021, 11, 24, 10, 56, 46, 269, DateTimeKind.Local).AddTicks(9679),
                            StateTitle = "IDLE",
                            Status = "Active",
                            UpdatedAt = new DateTime(2021, 11, 24, 10, 56, 46, 269, DateTimeKind.Local).AddTicks(9942)
                        },
                        new
                        {
                            DroneStateId = new Guid("ca9ef137-8da4-4aed-a03b-93b822a072e4"),
                            CreatedAt = new DateTime(2021, 11, 24, 10, 56, 46, 270, DateTimeKind.Local).AddTicks(245),
                            StateTitle = "LOADING",
                            Status = "Active",
                            UpdatedAt = new DateTime(2021, 11, 24, 10, 56, 46, 270, DateTimeKind.Local).AddTicks(260)
                        },
                        new
                        {
                            DroneStateId = new Guid("d3010830-781c-4a6e-8122-a166d69f530b"),
                            CreatedAt = new DateTime(2021, 11, 24, 10, 56, 46, 270, DateTimeKind.Local).AddTicks(269),
                            StateTitle = "LOADED",
                            Status = "Active",
                            UpdatedAt = new DateTime(2021, 11, 24, 10, 56, 46, 270, DateTimeKind.Local).AddTicks(271)
                        },
                        new
                        {
                            DroneStateId = new Guid("2837a202-0753-415f-9554-3e86d6f55609"),
                            CreatedAt = new DateTime(2021, 11, 24, 10, 56, 46, 270, DateTimeKind.Local).AddTicks(272),
                            StateTitle = "DELIVERING",
                            Status = "Active",
                            UpdatedAt = new DateTime(2021, 11, 24, 10, 56, 46, 270, DateTimeKind.Local).AddTicks(273)
                        },
                        new
                        {
                            DroneStateId = new Guid("3304ae56-2bf6-4873-bfe7-74c9c9b20e4c"),
                            CreatedAt = new DateTime(2021, 11, 24, 10, 56, 46, 270, DateTimeKind.Local).AddTicks(275),
                            StateTitle = "DELIVERED",
                            Status = "Active",
                            UpdatedAt = new DateTime(2021, 11, 24, 10, 56, 46, 270, DateTimeKind.Local).AddTicks(276)
                        },
                        new
                        {
                            DroneStateId = new Guid("b541c479-dcdf-4791-b307-22c4357e33dd"),
                            CreatedAt = new DateTime(2021, 11, 24, 10, 56, 46, 270, DateTimeKind.Local).AddTicks(278),
                            StateTitle = "RETURNING",
                            Status = "Active",
                            UpdatedAt = new DateTime(2021, 11, 24, 10, 56, 46, 270, DateTimeKind.Local).AddTicks(279)
                        });
                });

            modelBuilder.Entity("drones_api.Models.Medication", b =>
                {
                    b.Property<Guid>("MedicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MedicationId");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("Medications");
                });

            modelBuilder.Entity("drones_api.Models.Drone", b =>
                {
                    b.HasOne("drones_api.Models.DroneModel", "DroneModel")
                        .WithOne("Drone")
                        .HasForeignKey("drones_api.Models.Drone", "DroneModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("drones_api.Models.DroneState", "DroneState")
                        .WithOne("Drone")
                        .HasForeignKey("drones_api.Models.Drone", "DroneStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
