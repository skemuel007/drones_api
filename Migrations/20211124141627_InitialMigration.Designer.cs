// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using drones_api.Data;

namespace drones_api.Migrations
{
    [DbContext(typeof(DronesApiContext))]
    [Migration("20211124141627_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("drones_api.Models.Drone", b =>
                {
                    b.Property<Guid>("DroneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BatterCapacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DroneModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DroneStateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("WeightLimit")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DroneId");

                    b.HasIndex("DroneModelId");

                    b.HasIndex("DroneStateId");

                    b.HasIndex("SerialNumber")
                        .IsUnique()
                        .HasFilter("[SerialNumber] IS NOT NULL");

                    b.ToTable("Drones");

                    b.HasData(
                        new
                        {
                            DroneId = new Guid("1daa4db5-0ce9-4cb3-9388-fd4317cb3904"),
                            BatterCapacity = 100,
                            CreatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 696, DateTimeKind.Local).AddTicks(2297),
                            DroneModelId = new Guid("68679bc6-04a1-4b83-a477-e13c77da04d7"),
                            DroneStateId = new Guid("90e682ba-1235-4085-8030-95a672d66660"),
                            SerialNumber = "2zr5y-s29xx-oexdl-viuln-5xvr4",
                            UpdatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 696, DateTimeKind.Local).AddTicks(2608),
                            WeightLimit = 200m
                        },
                        new
                        {
                            DroneId = new Guid("8af14faf-d8d9-4ab6-9281-dacb4ae340ef"),
                            BatterCapacity = 100,
                            CreatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 696, DateTimeKind.Local).AddTicks(3017),
                            DroneModelId = new Guid("68679bc6-04a1-4b83-a477-e13c77da04d7"),
                            DroneStateId = new Guid("90e682ba-1235-4085-8030-95a672d66660"),
                            SerialNumber = "2ixei-fnp0e-gmtpa-lxbpl-dz665",
                            UpdatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 696, DateTimeKind.Local).AddTicks(3030),
                            WeightLimit = 200m
                        },
                        new
                        {
                            DroneId = new Guid("8f4f64b0-b0e8-4e96-a555-7eac8ba66505"),
                            BatterCapacity = 100,
                            CreatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 696, DateTimeKind.Local).AddTicks(3047),
                            DroneModelId = new Guid("b23f8368-a938-43f2-b803-0306e99927f5"),
                            DroneStateId = new Guid("90e682ba-1235-4085-8030-95a672d66660"),
                            SerialNumber = "8ytyj-ss357-1jtod-12g03-dkz8z",
                            UpdatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 696, DateTimeKind.Local).AddTicks(3048),
                            WeightLimit = 300m
                        },
                        new
                        {
                            DroneId = new Guid("91d7c4cd-1b96-4546-abcf-b8e086b26995"),
                            BatterCapacity = 100,
                            CreatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 696, DateTimeKind.Local).AddTicks(3055),
                            DroneModelId = new Guid("b23f8368-a938-43f2-b803-0306e99927f5"),
                            DroneStateId = new Guid("90e682ba-1235-4085-8030-95a672d66660"),
                            SerialNumber = "q8on7-u6wzh-z73fd-t8pkh-p1bqh",
                            UpdatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 696, DateTimeKind.Local).AddTicks(3056),
                            WeightLimit = 300m
                        },
                        new
                        {
                            DroneId = new Guid("0c00ee4e-b6f7-4fe7-94ed-ed5abd2a73d3"),
                            BatterCapacity = 100,
                            CreatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 696, DateTimeKind.Local).AddTicks(3064),
                            DroneModelId = new Guid("a353826a-b57f-4675-990f-b76038652cd4"),
                            DroneStateId = new Guid("90e682ba-1235-4085-8030-95a672d66660"),
                            SerialNumber = "o41lm-9nrwp-bhhgk-049u3-3ehjd",
                            UpdatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 696, DateTimeKind.Local).AddTicks(3065),
                            WeightLimit = 400m
                        },
                        new
                        {
                            DroneId = new Guid("2035fb8d-f31c-4225-be3a-b250fb704fb9"),
                            BatterCapacity = 100,
                            CreatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 696, DateTimeKind.Local).AddTicks(3072),
                            DroneModelId = new Guid("a353826a-b57f-4675-990f-b76038652cd4"),
                            DroneStateId = new Guid("90e682ba-1235-4085-8030-95a672d66660"),
                            SerialNumber = "u5zoc-escfo-maj11-kqyiw-hyasa",
                            UpdatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 696, DateTimeKind.Local).AddTicks(3073),
                            WeightLimit = 400m
                        },
                        new
                        {
                            DroneId = new Guid("a9588e8b-486f-45f1-bb83-d02bee9a2d3b"),
                            BatterCapacity = 100,
                            CreatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 696, DateTimeKind.Local).AddTicks(3145),
                            DroneModelId = new Guid("79fe7bc1-fafb-4e29-8712-d94b79859648"),
                            DroneStateId = new Guid("90e682ba-1235-4085-8030-95a672d66660"),
                            SerialNumber = "ierfv-jrvs0-cmstz-gcwyk-p280m",
                            UpdatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 696, DateTimeKind.Local).AddTicks(3146),
                            WeightLimit = 500m
                        },
                        new
                        {
                            DroneId = new Guid("a9715d4a-6ebd-450b-b55b-751a9faadd00"),
                            BatterCapacity = 100,
                            CreatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 696, DateTimeKind.Local).AddTicks(3154),
                            DroneModelId = new Guid("79fe7bc1-fafb-4e29-8712-d94b79859648"),
                            DroneStateId = new Guid("90e682ba-1235-4085-8030-95a672d66660"),
                            SerialNumber = "jjimb-glwfe-qikfw-g10nf-unhqx",
                            UpdatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 696, DateTimeKind.Local).AddTicks(3155),
                            WeightLimit = 500m
                        },
                        new
                        {
                            DroneId = new Guid("b5b6a5cd-ebc0-434d-a1a6-38556840948f"),
                            BatterCapacity = 100,
                            CreatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 696, DateTimeKind.Local).AddTicks(3162),
                            DroneModelId = new Guid("b23f8368-a938-43f2-b803-0306e99927f5"),
                            DroneStateId = new Guid("90e682ba-1235-4085-8030-95a672d66660"),
                            SerialNumber = "llccv-1at7t-9mumk-gsq6v-264co",
                            UpdatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 696, DateTimeKind.Local).AddTicks(3163),
                            WeightLimit = 500m
                        },
                        new
                        {
                            DroneId = new Guid("cc19ad1e-7fd1-4094-9bef-ee9d7d5d7360"),
                            BatterCapacity = 100,
                            CreatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 696, DateTimeKind.Local).AddTicks(3170),
                            DroneModelId = new Guid("79fe7bc1-fafb-4e29-8712-d94b79859648"),
                            DroneStateId = new Guid("90e682ba-1235-4085-8030-95a672d66660"),
                            SerialNumber = "o34br-ey9w0-djcyu-vtxni-n8qgr",
                            UpdatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 696, DateTimeKind.Local).AddTicks(3171),
                            WeightLimit = 500m
                        });
                });

            modelBuilder.Entity("drones_api.Models.DroneMedication", b =>
                {
                    b.Property<Guid>("DroneId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MedicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("DroneId", "MedicationId");

                    b.HasIndex("MedicationId");

                    b.ToTable("DroneMedications");
                });

            modelBuilder.Entity("drones_api.Models.DroneModel", b =>
                {
                    b.Property<Guid>("DroneModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(90)")
                        .HasMaxLength(90);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("DroneModelId");

                    b.HasIndex("ModelName")
                        .IsUnique();

                    b.ToTable("DroneModels");

                    b.HasData(
                        new
                        {
                            DroneModelId = new Guid("68679bc6-04a1-4b83-a477-e13c77da04d7"),
                            CreatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 691, DateTimeKind.Local).AddTicks(6679),
                            ModelName = "Lightweight",
                            Status = "Active",
                            UpdatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 692, DateTimeKind.Local).AddTicks(7456)
                        },
                        new
                        {
                            DroneModelId = new Guid("b23f8368-a938-43f2-b803-0306e99927f5"),
                            CreatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 692, DateTimeKind.Local).AddTicks(8129),
                            ModelName = "MiddleWeight",
                            Status = "Active",
                            UpdatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 692, DateTimeKind.Local).AddTicks(8144)
                        },
                        new
                        {
                            DroneModelId = new Guid("a353826a-b57f-4675-990f-b76038652cd4"),
                            CreatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 692, DateTimeKind.Local).AddTicks(8162),
                            ModelName = "Cruiserweight",
                            Status = "Active",
                            UpdatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 692, DateTimeKind.Local).AddTicks(8163)
                        },
                        new
                        {
                            DroneModelId = new Guid("79fe7bc1-fafb-4e29-8712-d94b79859648"),
                            CreatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 692, DateTimeKind.Local).AddTicks(8169),
                            ModelName = "Heavyweight",
                            Status = "Active",
                            UpdatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 692, DateTimeKind.Local).AddTicks(8170)
                        });
                });

            modelBuilder.Entity("drones_api.Models.DroneState", b =>
                {
                    b.Property<Guid>("DroneStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("StateTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("DroneStateId");

                    b.HasIndex("StateTitle")
                        .IsUnique();

                    b.ToTable("DroneStates");

                    b.HasData(
                        new
                        {
                            DroneStateId = new Guid("90e682ba-1235-4085-8030-95a672d66660"),
                            CreatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 694, DateTimeKind.Local).AddTicks(6807),
                            StateTitle = "IDLE",
                            Status = "Active",
                            UpdatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 694, DateTimeKind.Local).AddTicks(7153)
                        },
                        new
                        {
                            DroneStateId = new Guid("ca9ef137-8da4-4aed-a03b-93b822a072e4"),
                            CreatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 694, DateTimeKind.Local).AddTicks(7620),
                            StateTitle = "LOADING",
                            Status = "Active",
                            UpdatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 694, DateTimeKind.Local).AddTicks(7634)
                        },
                        new
                        {
                            DroneStateId = new Guid("d3010830-781c-4a6e-8122-a166d69f530b"),
                            CreatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 694, DateTimeKind.Local).AddTicks(7648),
                            StateTitle = "LOADED",
                            Status = "Active",
                            UpdatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 694, DateTimeKind.Local).AddTicks(7650)
                        },
                        new
                        {
                            DroneStateId = new Guid("2837a202-0753-415f-9554-3e86d6f55609"),
                            CreatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 694, DateTimeKind.Local).AddTicks(7655),
                            StateTitle = "DELIVERING",
                            Status = "Active",
                            UpdatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 694, DateTimeKind.Local).AddTicks(7656)
                        },
                        new
                        {
                            DroneStateId = new Guid("3304ae56-2bf6-4873-bfe7-74c9c9b20e4c"),
                            CreatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 694, DateTimeKind.Local).AddTicks(7659),
                            StateTitle = "DELIVERED",
                            Status = "Active",
                            UpdatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 694, DateTimeKind.Local).AddTicks(7660)
                        },
                        new
                        {
                            DroneStateId = new Guid("b541c479-dcdf-4791-b307-22c4357e33dd"),
                            CreatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 694, DateTimeKind.Local).AddTicks(7664),
                            StateTitle = "RETURNING",
                            Status = "Active",
                            UpdatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 694, DateTimeKind.Local).AddTicks(7665)
                        });
                });

            modelBuilder.Entity("drones_api.Models.Medication", b =>
                {
                    b.Property<Guid>("MedicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MedicationId");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("Medications");

                    b.HasData(
                        new
                        {
                            MedicationId = new Guid("6e1dda1d-ec99-4253-9ddc-79cd8a4505b4"),
                            Code = "74WA3_X6E21",
                            CreatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 697, DateTimeKind.Local).AddTicks(1231),
                            Image = "https://res.cloudinary.com/skemuel008/image/upload/v1637753570/Panadol_kkukne.png",
                            Name = "Panadol",
                            UpdatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 697, DateTimeKind.Local).AddTicks(1544),
                            Weight = 250m
                        },
                        new
                        {
                            MedicationId = new Guid("853fc8f5-804f-47ad-a0eb-e7769d5874e5"),
                            Code = "TJ2HQ_0NZQS",
                            CreatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 697, DateTimeKind.Local).AddTicks(1944),
                            Image = "https://res.cloudinary.com/skemuel008/image/upload/v1637753614/7235_large_EmergenC-SuperOrange-VitaminC-2020_lxws0r.png",
                            Name = "Vitamin C",
                            UpdatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 697, DateTimeKind.Local).AddTicks(1958),
                            Weight = 300m
                        },
                        new
                        {
                            MedicationId = new Guid("54c23318-e002-4f14-b978-766d215968e9"),
                            Code = "A20W9_7M2JN",
                            CreatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 697, DateTimeKind.Local).AddTicks(1969),
                            Image = "https://res.cloudinary.com/skemuel008/image/upload/v1637753649/BComplex-1024_boxc6g.png",
                            Name = "B Complex",
                            UpdatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 697, DateTimeKind.Local).AddTicks(1970),
                            Weight = 420m
                        },
                        new
                        {
                            MedicationId = new Guid("c39227a1-4151-49ca-ad64-e26470b63ced"),
                            Code = "KSU5J_KRYUF",
                            CreatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 697, DateTimeKind.Local).AddTicks(1973),
                            Image = "https://res.cloudinary.com/skemuel008/image/upload/v1637753688/tpgbcndploflml9xoqdg_bitlqv.jpg",
                            Name = "Ciprotab",
                            UpdatedAt = new DateTime(2021, 11, 24, 15, 16, 26, 697, DateTimeKind.Local).AddTicks(1974),
                            Weight = 450m
                        });
                });

            modelBuilder.Entity("drones_api.Models.Drone", b =>
                {
                    b.HasOne("drones_api.Models.DroneModel", "DroneModel")
                        .WithOne("Drone")
                        .HasForeignKey("drones_api.Models.Drone", "DroneModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("drones_api.Models.DroneState", "DroneState")
                        .WithOne("Drone")
                        .HasForeignKey("drones_api.Models.Drone", "DroneStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("drones_api.Models.DroneMedication", b =>
                {
                    b.HasOne("drones_api.Models.Drone", "Drone")
                        .WithMany("DroneMedications")
                        .HasForeignKey("DroneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("drones_api.Models.Medication", "Medication")
                        .WithMany("DroneMedications")
                        .HasForeignKey("MedicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
